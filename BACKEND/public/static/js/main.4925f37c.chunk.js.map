{"version":3,"sources":["shared/components/UIElements/LoadingSpinner.js","shared/context/auth-context.js","shared/components/UIElements/Card.js","shared/components/UIElements/Backdrop.js","shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/hooks/http-hook.js","shared/components/UIElements/Modal.js","shared/components/hooks/auth-hook.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","shared/components/UIElements/Avatar.js","user/components/UserItem.js","user/components/UsersList.js","user/pages/Users.js","App.js","index.js"],"names":["LoadingSpinner","props","className","asOverlay","AuthContext","createContext","isLoggedIn","userId","token","login","logout","Card","style","children","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","Button","href","size","inverse","danger","to","exact","type","disabled","ErrorModal","onCancel","onClear","header","show","error","footer","useHttpClient","useState","setError","isLoading","setIsLoading","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","ModalOverlay","content","headerClass","onSubmit","event","preventDefault","contentClass","footerClass","Modal","Fragment","in","mountOnEnter","unmountOnExit","timeout","classNames","logoutTimer","NavLinks","auth","useContext","MainHeader","SideDrawer","CSSTransition","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Avatar","src","image","alt","width","height","UserItem","id","process","name","placeCount","UsersList","items","length","map","user","key","places","Users","loadedUsers","setLoadedUsers","users","fetchUsers","NewPlace","React","lazy","UserPlaces","UpdatePlace","Auth","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","uid","expirationDate","tokenExpiration","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","storedData","parse","getItem","removeItem","remainingTime","setTimeout","clearTimeout","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.4925f37c.chunk.js","sourcesContent":["import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { createContext } from 'react';\r\n\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  userId: null, \r\n  token: null,\r\n  login: () => {}, \r\n  logout: () => {} \r\n});","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import { useState, useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n  const [error, setError] = useState();\r\n  const [isLoading, setIsLoading] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback( \r\n    async(url, method = 'GET', body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n      try {\r\n    const response = await fetch(url, {\r\n      method,\r\n      body,\r\n      headers,\r\n      signal: httpAbortCtrl.signal\r\n    });\r\n\r\n    const responseData = await response.json();\r\n\r\n    activeHttpRequests.current = activeHttpRequests.current.filter(\r\n      reqCtrl => reqCtrl !== httpAbortCtrl\r\n      );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(responseData.message);\r\n    }\r\n\r\n    setIsLoading(false);\r\n\r\n    return responseData;\r\n  } catch (err) {\r\n    setError(err.message);\r\n    setIsLoading(false);\r\n    throw err;\r\n   }\r\n  }, []);\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n    };\r\n  }\r\n  , []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition} from 'react-transition-group';\r\n\r\nimport Backdrop from './Backdrop';\r\nimport './Modal.css';\r\n\r\nconst ModalOverlay = props => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form onSubmit={props.onSubmit ? props.onSubmit : (event) => event.preventDefault()}>\r\n        <div className={`modal_content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'))\r\n};\r\n\r\nconst Modal = props => {\r\n  return <React.Fragment>\r\n    {props.show && <Backdrop onClick={props.onCancel} />}\r\n    {<CSSTransition \r\n      in={props.show}\r\n      mountOnEnter \r\n      unmountOnExit\r\n      timeout={200}\r\n      classNames={\"modal\"} >\r\n      \r\n    <ModalOverlay {...props}/>\r\n    </CSSTransition>\r\n    }\r\n  </React.Fragment>\r\n};\r\n\r\nexport default Modal;","import { useEffect, useState, useCallback } from 'react';\r\n\r\n  let logoutTimer;\r\n  \r\n  export const useAuth = () => {\r\n\r\n    const [token, setToken] = useState(false);\r\n    const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n    const [userId, setUserId] = useState(false);\r\n    \r\n    const login = useCallback((uid, token, expirationDate) => {\r\n      setToken(token);\r\n      setTokenExpirationDate(null)\r\n      setUserId(uid);\r\n      const tokenExpiration = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60 )\r\n      setTokenExpirationDate(tokenExpiration);\r\n      localStorage.setItem(\r\n        'userData',\r\n        JSON.stringify({ userId: uid , token: token, expiration: tokenExpiration.toISOString() })\r\n        );\r\n      }, []);\r\n      \r\n      useEffect(() => {\r\n        const storedData = JSON.parse(localStorage.getItem('userData'));\r\n        if (\r\n          storedData &&\r\n          storedData.token &&\r\n          new Date(storedData.expiration) > new Date()\r\n        ) {\r\n          login(storedData.userId, storedData.token, new Date(storedData.expiration));\r\n        }\r\n      }, [login])\r\n      \r\n    const logout = useCallback(() => {\r\n      setToken(null);\r\n      setUserId(null);\r\n      localStorage.removeItem('userData');\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      if (token && tokenExpirationDate) {\r\n        const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\r\n        logoutTimer = setTimeout(logout, remainingTime);\r\n      } else {\r\n        clearTimeout(logoutTimer);\r\n      }\r\n    }, [token, logout, tokenExpirationDate]);\r\n\r\n    return { token, login, logout, userId}\r\n }","import React, { useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { AuthContext } from '../../context/auth-context';\r\nimport './NavLinks.css';\r\n\r\nconst NavLinks = props => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  return <ul className=\"nav-links\">\r\n    <li>\r\n      <NavLink to=\"/\" exact>ALL USERS</NavLink>\r\n    </li>\r\n    { auth.isLoggedIn && ( \r\n    <li>\r\n      <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\r\n    </li>\r\n    )}\r\n    { auth.isLoggedIn && ( \r\n    <li>\r\n      <NavLink to=\"/places/new\">ADD PLACE</NavLink>\r\n    </li>\r\n    )}\r\n      { !auth.isLoggedIn && ( \r\n    <li>\r\n      <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\r\n    </li>\r\n      )}\r\n      { auth.isLoggedIn && ( \r\n    <li>\r\n      <button onClick={auth.logout}>LOGOUT</button>\r\n    </li>\r\n      )}\r\n  </ul>\r\n};\r\n\r\nexport default NavLinks;","import React from 'react';\r\n\r\nimport './MainHeader.css';\r\n\r\nconst MainHeader = (props) => {\r\n return <header className='main-header'> {props.children} </header>\r\n};\r\n\r\nexport default MainHeader;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport './SideDrawer.css';\r\n\r\nconst SideDrawer = props => {\r\n  const content = (\r\n    <CSSTransition\r\n     in={props.show} \r\n     timeout={200}\r\n     classNames=\"slide-in-left\"\r\n     mountOnEnter\r\n     unmountOnExit\r\n    >\r\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\r\n    </CSSTransition> \r\n  );\r\n return ReactDOM.createPortal(content, document.getElementById('drawer-hook'))\r\n};\r\n\r\nexport default SideDrawer;","import React, { useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Backdrop from '../UIElements/Backdrop';\r\nimport NavLinks from './NavLinks';\r\nimport MainHeader from './MainHeader';\r\nimport SideDrawer from './SideDrawer';\r\nimport './MainNavigation.css'\r\n\r\nconst MainNavigation = props => {\r\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n\r\n  const openDrawerHandler = () => setDrawerIsOpen(true);\r\n  const closeDrawerHandler = () => setDrawerIsOpen(false);\r\n\r\n\r\n  return ( \r\n    <React.Fragment>\r\n      {drawerIsOpen ? <Backdrop onClick={closeDrawerHandler}/> : null}\r\n       \r\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n        <nav className=\"main-navigation__drawer-nav\">\r\n          <NavLinks/>\r\n        </nav>\r\n      </SideDrawer>\r\n      \r\n      <MainHeader>\r\n        <button \r\n        className=\"main-navigation__menu-btn\"\r\n        onClick={openDrawerHandler}>\r\n          <span />\r\n          <span />\r\n          <span />\r\n        </button>\r\n        <h1 className=\"main-navigation__title\">\r\n          <Link to=\"/\">YourPlaces</Link>\r\n        </h1>\r\n        <nav className=\"main-navigation__header-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </MainHeader>\r\n    </React.Fragment>\r\n  )};\r\n\r\nexport default MainNavigation;","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Card from '../../shared/components/UIElements/Card'\r\nimport './UserItem.css';\r\nimport Avatar from '../../shared/components/UIElements/Avatar';\r\n\r\nconst UserItem = props => {\r\n    return (\r\n         <li className=\"user-item\">\r\n             <Card className=\"user-item__content\"> \r\n              <Link to={`/${props.id}/places`}>\r\n                <div className=\"user-item__image\">\r\n                   <Avatar image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.name} src={props.image} /> \r\n                 </div>\r\n                 <div className=\"user-item__info\">\r\n                    <h2>{props.name}</h2>\r\n                    <h3>{props.placeCount} {props.placeCount === 1 ? 'Place' : 'Places' }</h3>\r\n                 </div>\r\n              </Link>\r\n            </Card>  \r\n         </li>\r\n    );\r\n}\r\n\r\nexport default UserItem;\r\n","import React from 'react';\r\n\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport UserItem from './UserItem';\r\nimport './UsersList.css';\r\n\r\nconst UsersList = props => {\r\n    if (props.items.length === 0) {\r\n        return (\r\n            <div className=\"center\">\r\n                <Card>\r\n                  <h2>No users found.</h2>\r\n                </Card>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return <ul className='users-list'>\r\n        {props.items.map(user => ( \r\n            <UserItem \r\n                key={user.id} \r\n                id={user.id}\r\n                image={user.image}\r\n                name={user.name}\r\n                placeCount={user.places.length} \r\n            />\r\n        ))}\r\n    </ul>\r\n}\r\n\r\nexport default UsersList;\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nimport UsersList from '../components/UsersList';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from '../../shared/components/hooks/http-hook';\r\n\r\nconst Users = () => {\r\n    const [loadedUsers, setLoadedUsers] = useState();\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    useEffect(() => {\r\n        const fetchUsers = async () => {\r\n            try {\r\n                const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + '/users');\r\n                setLoadedUsers(responseData.users);\r\n            } catch (err) {}      \r\n        };\r\n        fetchUsers();\r\n     }, [sendRequest]);\r\n\r\n\r\n    return <React.Fragment>\r\n        <ErrorModal error={error} onClear={clearError} />\r\n        { isLoading && (\r\n             <div className=\"center\">\r\n              <LoadingSpinner />\r\n            </div>\r\n        )}\r\n        {!isLoading && loadedUsers && <UsersList items={loadedUsers}/> } \r\n\r\n    </React.Fragment>\r\n}\r\n\r\nexport default Users;\r\n","import React, { Suspense } from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom'\n\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport Users from './user/pages/Users';\n// import NewPlace from './places/pages/NewPlace';\n// import UserPlaces from './places/pages/UserPlaces';\n// import UpdatePlace from './places/pages/UpdatePlace';\n// import Auth from './places/pages/Auth';\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from './shared/components/hooks/auth-hook';\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\n\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace'));\nconst UserPlaces = React.lazy(() => import('./places/pages/UserPlaces'));\nconst UpdatePlace = React.lazy(() => import('./places/pages/UpdatePlace'));\nconst Auth = React.lazy(() => import('./places/pages/Auth'));\n\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense fallback={\n          <div className=\"center\">\n            <LoadingSpinner />\n          </div>\n          }\n        >\n          {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}